
# 列出所有image
docker image ls

# 列出所有container
docker container ls -a

# 删除image
docker image rm -f imageName

# 删除container
docker container rm containerID
# 删除多个container
docker rm $(docker container ls -f "status=exited" -q)
# 删除全部container
docker rm $(docker container ls -aq)

# 启动image，将image的80端口映射到本地4000
docker run -p 4000:80 friendlyhello

# 启动image，交互式
docker run -it friendlyhello /bin/bash

# 命名image
docker tag imageID imageName

# save/load image
docker save imageName > targetName.tar
docker load < targetName.tar

# export/import container
docker export containerID > targetName.tar
docker import targetName.tar imageName



##### dockerfile ##### 
FROM r-base

# Copy the current directory contents into the container at /app
# COPY app/* app/

# Set the working directory to /app
WORKDIR /

# Install any needed packages specified in requirements.txt
# RUN R -e "install.packages('shiny')"

# Define environment variable
# ENV NAME World

# Make port 80 available to the world outside this container
EXPOSE 4321

# Run app.py when the container launches
CMD ["R", "-e shiny::runApp('app',4321)"]